@using WeLearn.Data.Models;
@model IEnumerable<Lesson>

@{
    ViewData["Title"] = "Lessons administration";
}

<partial name="_AdminPartial" />
<h1>Index</h1>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Grade)
            </th>
            <th>
                Created by user
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Video)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Material)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateCreated)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsDeleted)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Grade)
                </td>
                <td>
                    ID: @Html.DisplayFor(modelItem => item.ApplicationUser.Id)
                    <hr />
                    Username: @Html.DisplayFor(modelItem => item.ApplicationUser.UserName)
                    <hr />
                    Email: @Html.DisplayFor(modelItem => item.ApplicationUser.Email)
                </td>
                <td>
                    @{
                        var videoLink = Html.DisplayFor(modelItem => item.Video.Link);
                        var videoName = Html.DisplayFor(modelItem => item.Video.Name);
                        var videoContentType = Html.DisplayFor(modelItem => item.Video.ContentType);
                    }
                    <video id="player" class="js-player" playsinline controls crossorigin="anonymous" alt="@videoName" data-poster="@videoLink">
                        <source src="@videoLink" type="@videoContentType" />
                        <a href="@videoLink" download>Download</a>
                    </video>
                </td>
                <td>
                    <a asp-area="" asp-controller="Lesson" asp-action="Download" asp-route-link="@item.Material.Link" class="btn btn-sm btn-outline-info">
                        &nbsp;<i class="fas fa-arrow-down"></i>&nbsp;Download&nbsp;Resources
                    </a>
                </td>
                <td>
                    @item.DateCreated.ToShortDateString()
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsDeleted)
                </td>
                <td>
                    <a asp-area="" asp-controller="Lesson" asp-action="Watch" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary">Watch</a>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-warning">Details</a>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-success">Edit / Soft delete</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger">Hard Delete (Irreversible)</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script src="https://cdn.polyfill.io/v2/polyfill.min.js?features=es6,Array.prototype.includes,CustomEvent,Object.entries,Object.values,URL"></script>
    <script src="https://unpkg.com/plyr@3"></script>

    <script>
        const players = Array.from(document.querySelectorAll('.js-player')).map(p => new Plyr(p));
        window.player = player;
    </script>
}