// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WeLearn.Data;

namespace WeLearn.Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210510151547_AllSeededLessonsAreApprovedByDefault")]
    partial class AllSeededLessonsAreApprovedByDefault
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WeLearn.Data.Models.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("WeLearn.Data.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "96f2bde2-eafb-4fe6-b5e9-fe36f009b8e6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5ace6ef3-2dfd-4b9b-9506-5f4b990ec266",
                            Email = "default@gmail.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "DEFAULT@GMAIL.COM",
                            NormalizedUserName = "USERNAME",
                            PasswordHash = "AQAAAAEAACcQAAAAEGZGSa0DvjgfctxCYLQj0k+d2O5/Fjy25MVSLNbqcM+K7IO8vSkL8zyOj4axW6U+0Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e2296685-8137-4a62-bf1d-b5f29898d25f",
                            TwoFactorEnabled = false,
                            UserName = "Username"
                        });
                });

            modelBuilder.Entity("WeLearn.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(3136),
                            IsDeleted = false,
                            Name = "Bulgarian Language"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(3881),
                            IsDeleted = false,
                            Name = "Mathematics"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(3885),
                            IsDeleted = false,
                            Name = "Informatics"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(3887),
                            IsDeleted = false,
                            Name = "IT"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(3889),
                            IsDeleted = false,
                            Name = "Geography"
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(3891),
                            IsDeleted = false,
                            Name = "Physical Education and Sport"
                        },
                        new
                        {
                            Id = 7,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(3892),
                            IsDeleted = false,
                            Name = "Literature"
                        },
                        new
                        {
                            Id = 8,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(3894),
                            IsDeleted = false,
                            Name = "Civic Education"
                        },
                        new
                        {
                            Id = 9,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(3896),
                            IsDeleted = false,
                            Name = "English Language"
                        },
                        new
                        {
                            Id = 10,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(3898),
                            IsDeleted = false,
                            Name = "Russian Language"
                        },
                        new
                        {
                            Id = 11,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(3900),
                            IsDeleted = false,
                            Name = "History"
                        },
                        new
                        {
                            Id = 12,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(3902),
                            IsDeleted = false,
                            Name = "Biology"
                        },
                        new
                        {
                            Id = 13,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(3905),
                            IsDeleted = false,
                            Name = "Chemistry"
                        },
                        new
                        {
                            Id = 14,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(3907),
                            IsDeleted = false,
                            Name = "Music"
                        },
                        new
                        {
                            Id = 15,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(3909),
                            IsDeleted = false,
                            Name = "Art"
                        },
                        new
                        {
                            Id = 16,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(3911),
                            IsDeleted = false,
                            Name = "Technologies and Entrepreneurship"
                        },
                        new
                        {
                            Id = 17,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(3913),
                            IsDeleted = false,
                            Name = "Others"
                        });
                });

            modelBuilder.Entity("WeLearn.Data.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("LessonId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("LessonId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationUserId = "96f2bde2-eafb-4fe6-b5e9-fe36f009b8e6",
                            Content = "I like it!",
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 38, DateTimeKind.Utc).AddTicks(7300),
                            IsDeleted = false,
                            LessonId = 1
                        },
                        new
                        {
                            Id = 2,
                            ApplicationUserId = "96f2bde2-eafb-4fe6-b5e9-fe36f009b8e6",
                            Content = "Good, but can be imroved.",
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 38, DateTimeKind.Utc).AddTicks(8959),
                            IsDeleted = false,
                            LessonId = 2
                        },
                        new
                        {
                            Id = 3,
                            ApplicationUserId = "96f2bde2-eafb-4fe6-b5e9-fe36f009b8e6",
                            Content = "This is very nice.",
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 38, DateTimeKind.Utc).AddTicks(8967),
                            IsDeleted = false,
                            LessonId = 3
                        });
                });

            modelBuilder.Entity("WeLearn.Data.Models.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("text");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1500)
                        .HasColumnType("character varying(1500)");

                    b.Property<int>("Grade")
                        .HasColumnType("integer");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<int>("VideoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("VideoId");

                    b.ToTable("Lessons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationUserId = "96f2bde2-eafb-4fe6-b5e9-fe36f009b8e6",
                            CategoryId = 1,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(8397),
                            Description = "A lecture about pronouns and when to use them.",
                            Grade = 0,
                            IsApproved = true,
                            IsDeleted = false,
                            MaterialId = 1,
                            Name = "Pronouns, types",
                            VideoId = 1
                        },
                        new
                        {
                            Id = 2,
                            ApplicationUserId = "96f2bde2-eafb-4fe6-b5e9-fe36f009b8e6",
                            CategoryId = 2,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(9410),
                            Description = "A natural number greater than 1 that is not a product of two smaller natural numbers.",
                            Grade = 0,
                            IsApproved = true,
                            IsDeleted = false,
                            MaterialId = 2,
                            Name = "Prime numbers",
                            VideoId = 2
                        },
                        new
                        {
                            Id = 3,
                            ApplicationUserId = "96f2bde2-eafb-4fe6-b5e9-fe36f009b8e6",
                            CategoryId = 3,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(9417),
                            Description = "About the C# language and the .NET development Platform. First steps.",
                            Grade = 0,
                            IsApproved = true,
                            IsDeleted = false,
                            MaterialId = 3,
                            Name = "Developing with C#",
                            VideoId = 3
                        },
                        new
                        {
                            Id = 4,
                            ApplicationUserId = "96f2bde2-eafb-4fe6-b5e9-fe36f009b8e6",
                            CategoryId = 4,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(9419),
                            Description = "Data analysis.",
                            Grade = 0,
                            IsApproved = true,
                            IsDeleted = false,
                            MaterialId = 4,
                            Name = "Excel",
                            VideoId = 4
                        },
                        new
                        {
                            Id = 5,
                            ApplicationUserId = "96f2bde2-eafb-4fe6-b5e9-fe36f009b8e6",
                            CategoryId = 5,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(9421),
                            Description = "Eastern European Countries. Their iconomic growth and political stances. Ukraine.",
                            Grade = 0,
                            IsApproved = true,
                            IsDeleted = false,
                            MaterialId = 5,
                            Name = "Ukraine, Eastern Europe",
                            VideoId = 5
                        },
                        new
                        {
                            Id = 6,
                            ApplicationUserId = "96f2bde2-eafb-4fe6-b5e9-fe36f009b8e6",
                            CategoryId = 6,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(9423),
                            Description = "Kicking a ball on the field.",
                            Grade = 0,
                            IsApproved = true,
                            IsDeleted = false,
                            MaterialId = 6,
                            Name = "Football",
                            VideoId = 6
                        },
                        new
                        {
                            Id = 7,
                            ApplicationUserId = "96f2bde2-eafb-4fe6-b5e9-fe36f009b8e6",
                            CategoryId = 7,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(9427),
                            Description = "A peek into Shakespere's art.",
                            Grade = 0,
                            IsApproved = true,
                            IsDeleted = false,
                            MaterialId = 7,
                            Name = "William Shakespere's 106 sonnet",
                            VideoId = 7
                        },
                        new
                        {
                            Id = 8,
                            ApplicationUserId = "96f2bde2-eafb-4fe6-b5e9-fe36f009b8e6",
                            CategoryId = 8,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(9429),
                            Description = "A lecture about rights of the people.",
                            Grade = 0,
                            IsApproved = true,
                            IsDeleted = false,
                            MaterialId = 8,
                            Name = "Human rights",
                            VideoId = 8
                        },
                        new
                        {
                            Id = 9,
                            ApplicationUserId = "96f2bde2-eafb-4fe6-b5e9-fe36f009b8e6",
                            CategoryId = 9,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(9431),
                            Description = "We use modals to show if we believe something is certain, possible or impossible.",
                            Grade = 0,
                            IsApproved = true,
                            IsDeleted = false,
                            MaterialId = 9,
                            Name = "Modal verbs",
                            VideoId = 9
                        },
                        new
                        {
                            Id = 10,
                            ApplicationUserId = "96f2bde2-eafb-4fe6-b5e9-fe36f009b8e6",
                            CategoryId = 10,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(9433),
                            Description = "A lecture about the verbs of motion and when to use them.",
                            Grade = 0,
                            IsApproved = true,
                            IsDeleted = false,
                            MaterialId = 10,
                            Name = "Verbs of motion",
                            VideoId = 10
                        },
                        new
                        {
                            Id = 11,
                            ApplicationUserId = "96f2bde2-eafb-4fe6-b5e9-fe36f009b8e6",
                            CategoryId = 11,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(9435),
                            Description = "A brief peek into our ancestors' life.",
                            Grade = 0,
                            IsApproved = true,
                            IsDeleted = false,
                            MaterialId = 11,
                            Name = "Peek in the past",
                            VideoId = 11
                        },
                        new
                        {
                            Id = 12,
                            ApplicationUserId = "96f2bde2-eafb-4fe6-b5e9-fe36f009b8e6",
                            CategoryId = 12,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(9438),
                            Description = "A lesson about the different types of cells and their differences.",
                            Grade = 0,
                            IsApproved = true,
                            IsDeleted = false,
                            MaterialId = 12,
                            Name = "Cells. Prokaryotic and Eukaryotic",
                            VideoId = 12
                        },
                        new
                        {
                            Id = 13,
                            ApplicationUserId = "96f2bde2-eafb-4fe6-b5e9-fe36f009b8e6",
                            CategoryId = 13,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(9441),
                            Description = "A lesson about acids, they effects on the environtment and usage cases.",
                            Grade = 0,
                            IsApproved = true,
                            IsDeleted = false,
                            MaterialId = 13,
                            Name = "Acids, Bases and pH",
                            VideoId = 13
                        },
                        new
                        {
                            Id = 14,
                            ApplicationUserId = "96f2bde2-eafb-4fe6-b5e9-fe36f009b8e6",
                            CategoryId = 14,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(9443),
                            Description = "Genres, instruments and notation.",
                            Grade = 0,
                            IsApproved = true,
                            IsDeleted = false,
                            MaterialId = 14,
                            Name = "Popular music",
                            VideoId = 14
                        },
                        new
                        {
                            Id = 15,
                            ApplicationUserId = "96f2bde2-eafb-4fe6-b5e9-fe36f009b8e6",
                            CategoryId = 15,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(9445),
                            Description = "Pigments, brushes, bases, matrices.",
                            Grade = 0,
                            IsApproved = true,
                            IsDeleted = false,
                            MaterialId = 15,
                            Name = "Painting",
                            VideoId = 15
                        },
                        new
                        {
                            Id = 16,
                            ApplicationUserId = "96f2bde2-eafb-4fe6-b5e9-fe36f009b8e6",
                            CategoryId = 16,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(9447),
                            Description = "Creating a new business, bearing most of the risks and enjoying most of the rewards.",
                            Grade = 0,
                            IsApproved = true,
                            IsDeleted = false,
                            MaterialId = 16,
                            Name = "Entrepreneurship",
                            VideoId = 16
                        });
                });

            modelBuilder.Entity("WeLearn.Data.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.HasKey("Id");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 40, DateTimeKind.Utc).AddTicks(270),
                            IsDeleted = false,
                            Link = "https://res.cloudinary.com/dgvfqp9zu/raw/upload/v1620309301/welearn-asp-net-core-app/zip-files/seed-dfd1-4ed3-a862-684cd9a35995_mdzu3z.zip",
                            Name = "Teaching"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 40, DateTimeKind.Utc).AddTicks(2191),
                            IsDeleted = false,
                            Link = "https://res.cloudinary.com/dgvfqp9zu/raw/upload/v1620309301/welearn-asp-net-core-app/zip-files/seed-dfd1-4ed3-a862-684cd9a35995_mdzu3z.zip",
                            Name = "Teaching"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 40, DateTimeKind.Utc).AddTicks(2202),
                            IsDeleted = false,
                            Link = "https://res.cloudinary.com/dgvfqp9zu/raw/upload/v1620309301/welearn-asp-net-core-app/zip-files/seed-dfd1-4ed3-a862-684cd9a35995_mdzu3z.zip",
                            Name = "Coding"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 40, DateTimeKind.Utc).AddTicks(2205),
                            IsDeleted = false,
                            Link = "https://res.cloudinary.com/dgvfqp9zu/raw/upload/v1620309301/welearn-asp-net-core-app/zip-files/seed-dfd1-4ed3-a862-684cd9a35995_mdzu3z.zip",
                            Name = "Office Suite"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 40, DateTimeKind.Utc).AddTicks(2208),
                            IsDeleted = false,
                            Link = "https://res.cloudinary.com/dgvfqp9zu/raw/upload/v1620309301/welearn-asp-net-core-app/zip-files/seed-dfd1-4ed3-a862-684cd9a35995_mdzu3z.zip",
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 40, DateTimeKind.Utc).AddTicks(2211),
                            IsDeleted = false,
                            Link = "https://res.cloudinary.com/dgvfqp9zu/raw/upload/v1620309301/welearn-asp-net-core-app/zip-files/seed-dfd1-4ed3-a862-684cd9a35995_mdzu3z.zip",
                            Name = "Football"
                        },
                        new
                        {
                            Id = 7,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 40, DateTimeKind.Utc).AddTicks(2214),
                            IsDeleted = false,
                            Link = "https://res.cloudinary.com/dgvfqp9zu/raw/upload/v1620309301/welearn-asp-net-core-app/zip-files/seed-dfd1-4ed3-a862-684cd9a35995_mdzu3z.zip",
                            Name = "Literature"
                        },
                        new
                        {
                            Id = 8,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 40, DateTimeKind.Utc).AddTicks(2217),
                            IsDeleted = false,
                            Link = "https://res.cloudinary.com/dgvfqp9zu/raw/upload/v1620309301/welearn-asp-net-core-app/zip-files/seed-dfd1-4ed3-a862-684cd9a35995_mdzu3z.zip",
                            Name = "Human Rights"
                        },
                        new
                        {
                            Id = 9,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 40, DateTimeKind.Utc).AddTicks(2222),
                            IsDeleted = false,
                            Link = "https://res.cloudinary.com/dgvfqp9zu/raw/upload/v1620309301/welearn-asp-net-core-app/zip-files/seed-dfd1-4ed3-a862-684cd9a35995_mdzu3z.zip",
                            Name = "Modal Verbs"
                        },
                        new
                        {
                            Id = 10,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 40, DateTimeKind.Utc).AddTicks(2225),
                            IsDeleted = false,
                            Link = "https://res.cloudinary.com/dgvfqp9zu/raw/upload/v1620309301/welearn-asp-net-core-app/zip-files/seed-dfd1-4ed3-a862-684cd9a35995_mdzu3z.zip",
                            Name = "Russian Language"
                        },
                        new
                        {
                            Id = 11,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 40, DateTimeKind.Utc).AddTicks(2226),
                            IsDeleted = false,
                            Link = "https://res.cloudinary.com/dgvfqp9zu/raw/upload/v1620309301/welearn-asp-net-core-app/zip-files/seed-dfd1-4ed3-a862-684cd9a35995_mdzu3z.zip",
                            Name = "History"
                        },
                        new
                        {
                            Id = 12,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 40, DateTimeKind.Utc).AddTicks(2227),
                            IsDeleted = false,
                            Link = "https://res.cloudinary.com/dgvfqp9zu/raw/upload/v1620309301/welearn-asp-net-core-app/zip-files/seed-dfd1-4ed3-a862-684cd9a35995_mdzu3z.zip",
                            Name = "Biology"
                        },
                        new
                        {
                            Id = 13,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 40, DateTimeKind.Utc).AddTicks(2229),
                            IsDeleted = false,
                            Link = "https://res.cloudinary.com/dgvfqp9zu/raw/upload/v1620309301/welearn-asp-net-core-app/zip-files/seed-dfd1-4ed3-a862-684cd9a35995_mdzu3z.zip",
                            Name = "Chemistry"
                        },
                        new
                        {
                            Id = 14,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 40, DateTimeKind.Utc).AddTicks(2230),
                            IsDeleted = false,
                            Link = "https://res.cloudinary.com/dgvfqp9zu/raw/upload/v1620309301/welearn-asp-net-core-app/zip-files/seed-dfd1-4ed3-a862-684cd9a35995_mdzu3z.zip",
                            Name = "Music"
                        },
                        new
                        {
                            Id = 15,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 40, DateTimeKind.Utc).AddTicks(2232),
                            IsDeleted = false,
                            Link = "https://res.cloudinary.com/dgvfqp9zu/raw/upload/v1620309301/welearn-asp-net-core-app/zip-files/seed-dfd1-4ed3-a862-684cd9a35995_mdzu3z.zip",
                            Name = "Painting"
                        },
                        new
                        {
                            Id = 16,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 40, DateTimeKind.Utc).AddTicks(2234),
                            IsDeleted = false,
                            Link = "https://res.cloudinary.com/dgvfqp9zu/raw/upload/v1620309301/welearn-asp-net-core-app/zip-files/seed-dfd1-4ed3-a862-684cd9a35995_mdzu3z.zip",
                            Name = "Entrepreneurship"
                        });
                });

            modelBuilder.Entity("WeLearn.Data.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("text");

                    b.Property<int?>("CommentId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("LessonId")
                        .HasColumnType("integer");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("CommentId");

                    b.HasIndex("LessonId");

                    b.ToTable("Reports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 38, DateTimeKind.Utc).AddTicks(9727),
                            Description = "Bad language in lesson's title.",
                            IsDeleted = false,
                            LessonId = 5,
                            Subject = "The language used in title"
                        },
                        new
                        {
                            Id = 3,
                            CommentId = 1,
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(1213),
                            Description = "Bad language in comment.",
                            IsDeleted = false,
                            Subject = "Unacceptable behaviour"
                        });
                });

            modelBuilder.Entity("WeLearn.Data.Models.Video", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.HasKey("Id");

                    b.ToTable("Videos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContentType = "video/mp4",
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(4560),
                            IsDeleted = false,
                            Link = "/uploads/videos/modal-verbs.mp4",
                            Name = "Teaching"
                        },
                        new
                        {
                            Id = 2,
                            ContentType = "video/mp4",
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(5946),
                            IsDeleted = false,
                            Link = "/uploads/videos/man-teaching.mp4",
                            Name = "Teaching"
                        },
                        new
                        {
                            Id = 3,
                            ContentType = "video/mp4",
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(5951),
                            IsDeleted = false,
                            Link = "/uploads/videos/coding.mp4",
                            Name = "Coding"
                        },
                        new
                        {
                            Id = 4,
                            ContentType = "video/mp4",
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(5953),
                            IsDeleted = false,
                            Link = "/uploads/videos/office-suite.mp4",
                            Name = "Office Suite"
                        },
                        new
                        {
                            Id = 5,
                            ContentType = "video/mp4",
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(5955),
                            IsDeleted = false,
                            Link = "/uploads/videos/eastern-europe.mp4",
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = 6,
                            ContentType = "video/mp4",
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(5957),
                            IsDeleted = false,
                            Link = "/uploads/videos/football.mp4",
                            Name = "Football"
                        },
                        new
                        {
                            Id = 7,
                            ContentType = "video/mp4",
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(5959),
                            IsDeleted = false,
                            Link = "/uploads/videos/literature.mp4",
                            Name = "Literature"
                        },
                        new
                        {
                            Id = 8,
                            ContentType = "video/mp4",
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(5961),
                            IsDeleted = false,
                            Link = "/uploads/videos/human-rights.mp4",
                            Name = "Human Rights"
                        },
                        new
                        {
                            Id = 9,
                            ContentType = "video/mp4",
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(5964),
                            IsDeleted = false,
                            Link = "/uploads/videos/modal-verbs.mp4",
                            Name = "Modal Verbs"
                        },
                        new
                        {
                            Id = 10,
                            ContentType = "video/mp4",
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(5966),
                            IsDeleted = false,
                            Link = "/uploads/videos/russian-language.mp4",
                            Name = "Russian Language"
                        },
                        new
                        {
                            Id = 11,
                            ContentType = "video/mp4",
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(5968),
                            IsDeleted = false,
                            Link = "/uploads/videos/history.mp4",
                            Name = "History"
                        },
                        new
                        {
                            Id = 12,
                            ContentType = "video/mp4",
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(5971),
                            IsDeleted = false,
                            Link = "/uploads/videos/biology.mp4",
                            Name = "Biology"
                        },
                        new
                        {
                            Id = 13,
                            ContentType = "video/mp4",
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(5974),
                            IsDeleted = false,
                            Link = "/uploads/videos/chemistry.mp4",
                            Name = "Chemistry"
                        },
                        new
                        {
                            Id = 14,
                            ContentType = "video/mp4",
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(5975),
                            IsDeleted = false,
                            Link = "/uploads/videos/music.mp4",
                            Name = "Music"
                        },
                        new
                        {
                            Id = 15,
                            ContentType = "video/mp4",
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(5977),
                            IsDeleted = false,
                            Link = "/uploads/videos/painting.mp4",
                            Name = "Painting"
                        },
                        new
                        {
                            Id = 16,
                            ContentType = "video/mp4",
                            DateCreated = new DateTime(2021, 5, 10, 15, 15, 45, 39, DateTimeKind.Utc).AddTicks(5979),
                            IsDeleted = false,
                            Link = "/uploads/videos/entrepreneurship.mp4",
                            Name = "Entrepreneurship"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("WeLearn.Data.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WeLearn.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WeLearn.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("WeLearn.Data.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeLearn.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WeLearn.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeLearn.Data.Models.Comment", b =>
                {
                    b.HasOne("WeLearn.Data.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("Comments")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WeLearn.Data.Models.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("WeLearn.Data.Models.Lesson", b =>
                {
                    b.HasOne("WeLearn.Data.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("Lessons")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("WeLearn.Data.Models.Category", "Category")
                        .WithMany("Lessons")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeLearn.Data.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeLearn.Data.Models.Video", "Video")
                        .WithMany()
                        .HasForeignKey("VideoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Category");

                    b.Navigation("Material");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("WeLearn.Data.Models.Report", b =>
                {
                    b.HasOne("WeLearn.Data.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("Reports")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("WeLearn.Data.Models.Comment", "Comment")
                        .WithMany()
                        .HasForeignKey("CommentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WeLearn.Data.Models.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ApplicationUser");

                    b.Navigation("Comment");

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("WeLearn.Data.Models.ApplicationUser", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Lessons");

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("WeLearn.Data.Models.Category", b =>
                {
                    b.Navigation("Lessons");
                });
#pragma warning restore 612, 618
        }
    }
}
