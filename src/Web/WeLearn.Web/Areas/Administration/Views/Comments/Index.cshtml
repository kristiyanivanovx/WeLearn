@model PaginatedList<AdminCommentViewModel>
@{
    ViewData["Title"] = "Comments administration";
}

@*<partial name="_AdminPartial"/>*@
<h3>Manage comments</h3>
<form asp-area="Administration" asp-controller="Users" asp-action="Index" method="get">
    <label>Find by comment's content:</label>
    <div class="input-group input-group-sm mb-3">
        <input type="text" name="SearchString" class="form-control input-sm col-md-3" value="@Model.SearchString"/>
        <input type="submit" value="Search" class="btn btn-sm btn-outline-success ml-1"/>
    </div>
</form>

<div class="text-center">
    <table class="table">
        <thead>
        <tr>
            <th>
                Content
            </th>
            <th>
                Created by user
            </th>
            <th>
                Lesson
            </th>
            <th>
                Video
            </th>
            <th>
                Material
            </th>
            <th>
                Date created
            </th>
            <th>
                Is deleted
            </th>
            <th>
                Manage
            </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.Raw(item.SanitizedCommentContent)
                </td>
                <td>
                    ID: @Html.DisplayFor(modelItem => item.UserId)
                    <hr/>
                    Username: @Html.DisplayFor(modelItem => item.UserUserName)
                    <hr/>
                    Email: @Html.DisplayFor(modelItem => item.UserEmail)
                </td>
                <td>
                    Name: @Html.DisplayFor(modelItem => item.LessonName)
                    <hr/>
                    Description: @Html.DisplayFor(modelItem => item.LessonDescription)
                    <hr/>
                    Grade: @Html.DisplayFor(modelItem => item.LessonGrade)
                    <hr/>
                    Category: @Html.DisplayFor(modelItem => item.LessonCategoryName)
                    <hr/>
                    Created by: @Html.DisplayFor(modelItem => item.LessonUserUserName)
                    <hr/>
                    Date created: <time datetime="@item.LessonCreatedOn.ToString("O")">@item.LessonCreatedOn.ToString("g")</time>
                </td>
                <td>
                    <video id="player" class="js-player" playsinline controls crossorigin="anonymous" alt="@item.LessonVideoName" data-poster="@item.LessonVideoLink">
                        <source src="@item.LessonVideoLink" type="@item.LessonVideoContentType"/>
                        <a href="@item.LessonVideoLink" download>Download</a>
                    </video>
                </td>
                <td>
                    <a asp-area="" asp-controller="Lesson" asp-action="Download" asp-route-link="@item.LessonMaterialLink" class="btn btn-sm btn-outline-info">
                        &nbsp;<i class="fas fa-arrow-down"></i>&nbsp;Download&nbsp;Resources
                    </a>
                </td>
                <td>
                    <time datetime="@item.CreatedOn.ToString("O")">@item.CreatedOn.ToString("g")</time>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsDeleted)
                </td>
                <td>
                    @{
                        string userId = User?.FindFirst(ClaimTypes.NameIdentifier)?.Value;
                        var dbUser = await userManager.FindByIdAsync(userId);
                        var dbUserIsTeacher = await userManager.IsInRoleAsync(dbUser, SystemTeacherRoleName);
                        var dbUserIsAdmin = await userManager.IsInRoleAsync(dbUser, SystemRegularAdministratorRoleName);
                        var dbUserIsHeadAdmin = await userManager.IsInRoleAsync(dbUser, SystemHeadAdministratorRoleName);

                        var disableIfUnauthorized =
                            dbUserIsTeacher && !dbUserIsHeadAdmin && !dbUserIsAdmin ? "disabled" : "enabled";
                    }
                    <a asp-area="" asp-controller="Lesson" asp-action="Watch" asp-route-id="@item.LessonId" class="btn btn-sm btn-outline-secondary mb-1">Watch</a>
                    <a asp-action="Edit" asp-route-id="@item.CommentId" class="btn btn-sm btn-outline-success mb-1">Edit / Soft delete</a>
                    <a asp-action="Delete" asp-route-id="@item.CommentId" class="btn btn-sm btn-outline-danger mb-1 @disableIfUnauthorized">Hard delete (Irreversible)</a>
                </td>
            </tr>
        }
        </tbody>
    </table>

    @* pagination section *@
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }
    <div class="mt-2 pb-2 text-center">
        <a asp-area="Administration"
           asp-controller="Users"
           asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           asp-route-searchString="@Model.SearchString"
           asp-route-categoryName="@ViewData["CategoryName"]"
           class="btn btn-sm btn-outline-dark @prevDisabled">
            <i class="fas fa-arrow-left"></i> Previous
        </a>
        @for (int index = 1; index <= Model.TotalPages; index++)
        {
            <a asp-area="Administration"
               asp-controller="Users"
               asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@index"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               asp-route-searchString="@Model.SearchString"
               asp-route-categoryName="@ViewData["CategoryName"]"
               class="btn btn-sm btn-outline-dark ">
                @index
            </a>
        }
        <a asp-area="Administration"
           asp-controller="Users"
           asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           asp-route-searchString="@Model.SearchString"
           asp-route-categoryName="@ViewData["CategoryName"]"
           class="btn btn-sm btn-outline-dark @nextDisabled">
            Next <i class="fas fa-arrow-right"></i>
        </a>
    </div>
    @* pagination section end *@
</div>

@section Scripts {
    <script src="https://cdn.polyfill.io/v2/polyfill.min.js?features=es6,Array.prototype.includes,CustomEvent,Object.entries,Object.values,URL"></script>
    <script src="https://unpkg.com/plyr@3"></script>

    <script>
        const players = Array.from(document.querySelectorAll('.js-player')).map(p => new Plyr(p));
        window.player = player;
    </script>
}