@model PaginatedList<AdminReportViewModel>
@{
    ViewData["Title"] = "Reports administration";
}

<h3>Manage reports</h3>

@*<p class="text-muted">*@
<p>
    Note: if the column "Lesson" is present/filled that means the type of report is a lesson report and vice versa,
    if the column "Comment" is present/filled that means the type of report is a comment report.
</p>
@* LessonId or CommentLessonId *@

<form asp-area="Administration" asp-controller="Reports" asp-action="Index" method="get">
    <label>Find by subject or description:</label>
    <div class="input-group input-group-sm mb-3">
        <input type="text" name="SearchString" class="form-control input-sm col-md-3" value="@Model.SearchString"/>
        <input type="submit" value="Search" class="btn btn-sm btn-outline-success ml-1"/>
    </div>
</form>

<div class="text-center ">
    <table class="table">
        <thead>
        <tr>
            <th>
                Subject
            </th>
            <th>
                Description
            </th>
            <th>
                Created by user
            </th>
            <th>
                Lesson details
            </th>
            <th>
                Comment content
            </th>
            <th>
                Date created
            </th>
            <th>
                Is deleted
            </th>
            <th>
                Manage
            </th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @item.Subject
                </td>
                <td>
                    @item.Description
                </td>
                <td>
                    @{
                        var userId = item.UserId ?? "Deleted User Id";
                        var userName = item.UserUserName ?? "Deleted User Username";
                        var userEmail = item.UserEmail ?? "Deleted User Email";
                    }

                    ID: @userId
                    <hr/>
                    Username: @userName
                    <hr/>
                    Email: @userEmail
                </td>
                <td>
                    @item.LessonName
                    <hr/>
                    @item.LessonDescription
                </td>
                <td>
                    @Html.Raw(item.SanitizedCommentContent)
                </td>
                <td>
                    <time datetime="@item.CreatedOn.ToString("O")">@item.CreatedOn.ToString("g")</time>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsDeleted)
                </td>
                <td>
                    @{
                        string currentUserId = User?.FindFirst(ClaimTypes.NameIdentifier)?.Value;
                        var dbUser = await userManager.FindByIdAsync(currentUserId);
                        var dbUserIsTeacher = await userManager.IsInRoleAsync(dbUser, SystemTeacherRoleName);
                        var dbUserIsAdmin = await userManager.IsInRoleAsync(dbUser, SystemRegularAdministratorRoleName);
                        var dbUserIsHeadAdmin = await userManager.IsInRoleAsync(dbUser, SystemHeadAdministratorRoleName);

                        var disableIfUnauthorized =
                            dbUserIsTeacher && !dbUserIsHeadAdmin && !dbUserIsAdmin ? "disabled" : "enabled";
                    }
                    @{
                        var lessonId = item.LessonId ?? item.CommentLessonId;
                    }
                    @if (lessonId != null)
                    {
                        <a asp-area="" asp-controller="Lesson" asp-action="Watch" asp-route-id="@lessonId" class="btn btn-sm btn-outline-secondary mb-1">
                            Watch
                        </a>
                    }
                    <a asp-area="Administration" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-success mb-1">
                        Edit / Soft delete
                    </a>
                    <a asp-area="Administration" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger mb-1 @disableIfUnauthorized">
                        Hard delete (Irreversible)
                    </a>
                </td>
            </tr>
        }
        </tbody>
    </table>

    @* pagination section *@
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <div class="mt-2 pb-2 text-center">
        <a asp-area="Administration"
           asp-controller="Reports"
           asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex - 1)"
           asp-route-searchString="@Model.SearchString"
           class="btn btn-sm btn-outline-dark @prevDisabled">
            <i class="fas fa-arrow-left"></i> Previous
        </a>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <a asp-area="Administration"
               asp-controller="Reports"
               asp-action="Index"
               asp-route-pageNumber="@i"
               asp-route-searchString="@Model.SearchString"
               class="btn btn-sm btn-outline-dark ">
                @i
            </a>
        }
        <a asp-area="Administration"
           asp-controller="Reports"
           asp-action="Index"
           asp-route-pageNumber="@(Model.PageIndex + 1)"
           asp-route-searchString="@Model.SearchString"
           class="btn btn-sm btn-outline-dark @nextDisabled">
            Next <i class="fas fa-arrow-right"></i>
        </a>
    </div>
    @* pagination section end *@

</div>