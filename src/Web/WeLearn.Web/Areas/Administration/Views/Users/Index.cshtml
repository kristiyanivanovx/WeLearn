@inject UserManager<ApplicationUser> userManager

@model PaginatedList<WeLearn.Web.ViewModels.Admin.User.AdminUserViewModel>
@{
    ViewData["Title"] = "Users administration";
}

<h3>Manage Users</h3>

<form asp-area="Administration" asp-controller="Users" asp-action="Index" method="get">
    <label>Find by user's name or email:</label>
    <div class="input-group input-group-sm mb-3">
        <input type="text" name="SearchString" class="form-control input-sm col-md-3" value="@Model.SearchString"/>
        <input type="submit" value="Search" class="btn btn-sm btn-outline-success ml-1"/>
    </div>
</form>

<div class="text-center">
<table class="table">
    <thead>
    <tr>
        <th>
            Id
        </th>
        <th>
            Username
        </th>
        <th>
            Email
        </th>
        <th>
            Roles
        </th>
        <th>
            Is Administrator?
        </th>
        <th>
            Is Teacher?
        </th>
        <th>
            Manage
        </th>
    </tr>
    </thead>
    <tbody>

    @foreach (var item in Model)
    {
        <tr>
            @{
                var dbUser = await userManager.FindByIdAsync(item.Id);
                var dbUserIsAdmin = await userManager.IsInRoleAsync(dbUser, SystemRegularAdministratorRoleName);
                var dbUserIsHeadAdmin = await userManager.IsInRoleAsync(dbUser, SystemHeadAdministratorRoleName);
                var dbUserIsTeacher = await userManager.IsInRoleAsync(dbUser, SystemTeacherRoleName);

                var adminRoleButtonClassStyling = dbUserIsAdmin ?
                    "btn btn-sm btn-outline-warning mb-1" :
                    "btn btn-sm btn-outline-success mb-1";

                var teacherRoleButtonClassStyling = !dbUserIsTeacher ?
                    "btn btn-sm btn-outline-success mb-1" :
                    "btn btn-sm btn-outline-warning mb-1";

                // current logged in admin is Head Admin
                var currentAdminIsHeadAdmin = User.IsInRole(SystemHeadAdministratorRoleName);
                var currentIsAdmin = User.IsInRole(SystemRegularAdministratorRoleName);

                // demoting is available only if the current logged in Admin is Head Admin
                // and the db entity (user) is not Head Admin
                var disableIfUnauthorized = currentAdminIsHeadAdmin && !dbUserIsHeadAdmin ? "enabled" : "disabled";
                var disableIfTeacherUnauthorized = currentIsAdmin && !dbUserIsHeadAdmin ? "enabled" : "disabled";
            }

            <td>
                @item.Id
            </td>
            <td>
                @item.UserName
            </td>
            <td>
                @item.Email
            </td>
            <td>
                @string.Join(", ", await userManager.GetRolesAsync(dbUser))
            </td>
            <td>
                @if (dbUserIsAdmin || dbUserIsHeadAdmin)
                {
                    <div class="admin-role-color">
                        Yes
                    </div>
                }
                else
                {
                    <div>
                        No
                    </div>
                }

                <form asp-area="Administration" asp-controller="Users" asp-action="ToggleAdminRole" asp-route-userId="@item.Id">
                    <button class="@adminRoleButtonClassStyling" @disableIfUnauthorized type="submit">
                        @if (dbUserIsAdmin)
                        {
                            <div>
                                Remove Admin
                            </div>
                        }
                        else
                        {
                            <div>
                                Make Admin
                            </div>
                        }
                    </button>
                </form>
            </td>
            <td>
                @if (dbUserIsTeacher)
                {
                    <div class="admin-role-color">Yes</div>
                }
                else
                {
                    <div>No</div>
                }

                <form asp-area="Administration" asp-controller="Users" asp-action="ToggleTeacherRole" asp-route-userId="@item.Id">
                    <button class="@teacherRoleButtonClassStyling" @disableIfTeacherUnauthorized type="submit">
                        @if (dbUserIsTeacher)
                        {
                            <div>Remove Teacher</div>
                        }
                        else
                        {
                            <div>Make Teacher</div>
                        }
                    </button>
                </form>
            </td>
            <td>
                <a asp-area="Administration" asp-controller="Users" asp-action="Delete" asp-route-id="@item.Id"
                   class="btn btn-sm btn-outline-danger mt-4 @disableIfUnauthorized">
                    Hard delete (Irreversible)
                </a>
                
                @* or this*@
                
                @* <button class="btn btn-sm btn-outline-danger mt-4" @disableIfUnauthorized data-toggle="modal" data-target="#confirmModal"> *@
                @*     Hard delete (Irreversible) *@
                @* </button> *@
                @* *@
                @* <!-- Delete Modal --> *@
                @* <div class="modal fade" id="confirmModal" tabindex="-1" role="dialog" aria-labelledby="confirmModalLabel" aria-hidden="true"> *@
                @*     <div class="modal-dialog" role="document"> *@
                @*         <div class="modal-content "> *@
                @*             <div class="modal-header"> *@
                @*                 <h5 class="modal-title" id="confirmModalLabel">Delete confirmation</h5> *@
                @*                 <button type="button" class="close" data-dismiss="modal" aria-label="Close"> *@
                @*                     <span aria-hidden="true">&times;</span> *@
                @*                 </button> *@
                @*             </div> *@
                @* *@
                @*             <div class="modal-body container"> *@
                @*                 <div>Are you sure that you want to delete this user?</div> *@
                @*             </div> *@
                @* *@
                @*             <form asp-area="Administration" asp-controller="Users" asp-action="Delete" asp-route-id="@item.Id" method="post"> *@
                @*                 <div class="modal-footer"> *@
                @*                     <input type="submit" value="Delete" class="btn btn-sm btn-outline-danger"/> *@
                @*                     <button type="button" class="btn btn-sm btn-outline-dark" data-dismiss="modal">Cancel</button> *@
                @*                 </div> *@
                @*             </form> *@
                @*         </div> *@
                @*     </div> *@
                @* </div> *@
            </td>
        </tr>
    }
    </tbody>
</table>

@* pagination section *@
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<div class="mt-2 mb-2 text-center">
    <a asp-area="Administration"
       asp-controller="Users"
       asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       asp-route-searchString="@Model.SearchString"
       asp-route-categoryName="@ViewData["UserName"]"
       class="btn btn-sm btn-outline-dark @prevDisabled">
        <i class="fas fa-arrow-left"></i> Previous
    </a>
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        var current = i;
        <a asp-area="Administration"
           asp-controller="Users"
           asp-action="Index"
           asp-route-sortOrder="@ViewData["CurrentSort"]"
           asp-route-pageNumber="@current"
           asp-route-currentFilter="@ViewData["CurrentFilter"]"
           asp-route-searchString="@Model.SearchString"
           asp-route-categoryName="@ViewData["UserName"]"
           class="btn btn-sm btn-outline-dark ">
            @current
        </a>
    }
    <a asp-area="Administration"
       asp-controller="Users"
       asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       asp-route-searchString="@Model.SearchString"
       asp-route-categoryName="@ViewData["UserName"]"
       class="btn btn-sm btn-outline-dark @nextDisabled">
        Next <i class="fas fa-arrow-right"></i>
    </a>
</div>

@* pagination section end *@
</div>

@section Scripts
{
    <!-- Bootstrap core JavaScript-->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Core plugin JavaScript-->
    <script src="vendor/jquery-easing/jquery.easing.min.js"></script>

    <!-- Custom scripts for all pages-->
    <script src="js/sb-admin-2.min.js"></script>

    <!-- Page level plugins -->
    @* <script src="vendor/chart.js/Chart.min.js"></script> *@
    @* *@
    @* <!-- Page level custom scripts --> *@
    @* <script src="js/demo/chart-area-demo.js"></script> *@
    @* <script src="js/demo/chart-pie-demo.js"></script> *@
}